{
  "contractName": "Whitelist",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "whitelistAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "unWhitelistAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"whitelistAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unWhitelistAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Context.sol\":{\"keccak256\":\"0x2c7a9dea2ae5ea3d40cef4deed08c76cca7596d554c74ffd78d989efadb96c90\",\"urls\":[\"bzz-raw://e4a697a8f776f482544667e9a66cdd7a3f47871a6a37cc82ed6fa034606fcce2\",\"dweb:/ipfs/Qmf6LJPbPbnwaZjbtTKt65tmYiPuabip9MGUSXq1Xmg1g1\"]},\"/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Ownable.sol\":{\"keccak256\":\"0x7541b974e3b6b6b9a3d16f68f1ee2b3c49a4b00e46ca5ab4661d45fadfdb98f5\",\"urls\":[\"bzz-raw://63c63947563680415604ccace133c097d3ca5763702e4019c89ba8e824cfc9c6\",\"dweb:/ipfs/QmeQTepYNCeYFqyMQmbFFSJ3mgd92wymdas5VXzaZ7DMUP\"]},\"/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Whitelist.sol\":{\"keccak256\":\"0x914a81285d8cc78536cc11345c0946587f942e382c1f9a58fd9d366a1fb8dec9\",\"urls\":[\"bzz-raw://3d97e8930e4fd6a9578e038be04dd34dce8a052bf81d0ffddfff844427bbc06e\",\"dweb:/ipfs/QmRzsLXaNaZThAYqjXXKxS222vWdfmoj11VfpV7osDeTYU\"]}},\"version\":1}",
  "bytecode": "0x608060405260006100146100b760201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100bf565b600033905090565b6107e4806100ce6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063415665851461005c578063715018a6146100a05780638da5cb5b146100aa578063cac9ffee146100f4578063f2fde38b14610138575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061017c565b005b6100a861029f565b005b6100b2610427565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101366004803603602081101561010a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610450565b005b61017a6004803603602081101561014e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610574565b005b610184610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610245576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6102a7610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610368576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610458610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61057c610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461063d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061078a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582058adb96f39ce5964580d78aadece5e7e14e38d9b50c25fedc7ad52ad2d5a374264736f6c634300050b0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063415665851461005c578063715018a6146100a05780638da5cb5b146100aa578063cac9ffee146100f4578063f2fde38b14610138575b600080fd5b61009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061017c565b005b6100a861029f565b005b6100b2610427565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101366004803603602081101561010a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610450565b005b61017a6004803603602081101561014e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610574565b005b610184610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610245576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6102a7610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610368576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610458610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61057c610781565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461063d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061078a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582058adb96f39ce5964580d78aadece5e7e14e38d9b50c25fedc7ad52ad2d5a374264736f6c634300050b0032",
  "sourceMap": "50:382:8:-;;;861:17:4;881:12;:10;;;:12;;:::i;:::-;861:32;;912:9;903:6;;:18;;;;;;;;;;;;;;;;;;969:9;936:43;;965:1;936:43;;;;;;;;;;;;827:159;50:382:8;;582:96:0;627:15;661:10;654:17;;582:96;:::o;50:382:8:-;;;;;;;",
  "deployedSourceMap": "50:382:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:382:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;243:90;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;243:90:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1685:137:4;;;:::i;:::-;;1062:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;337:93:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;337:93:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1971:232:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1971:232:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;243:90:8;1276:12:4;:10;:12::i;:::-;1266:22;;:6;;;;;;;;;;;:22;;;1258:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;324:4:8;306:9;:15;316:4;306:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;243:90;:::o;1685:137:4:-;1276:12;:10;:12::i;:::-;1266:22;;:6;;;;;;;;;;;:22;;;1258:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:1;1746:40;;1767:6;;;;;;;;;;;1746:40;;;;;;;;;;;;1813:1;1796:6;;:19;;;;;;;;;;;;;;;;;;1685:137::o;1062:77::-;1100:7;1126:6;;;;;;;;;;;1119:13;;1062:77;:::o;337:93:8:-;1276:12:4;:10;:12::i;:::-;1266:22;;:6;;;;;;;;;;;:22;;;1258:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:5:8;402:9;:15;412:4;402:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;337:93;:::o;1971:232:4:-;1276:12;:10;:12::i;:::-;1266:22;;:6;;;;;;;;;;;:22;;;1258:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2071:1;2051:22;;:8;:22;;;;2043:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:8;2131:38;;2152:6;;;;;;;;;;;2131:38;;;;;;;;;;;;2188:8;2179:6;;:17;;;;;;;;;;;;;;;;;;1971:232;:::o;582:96:0:-;627:15;661:10;654:17;;582:96;:::o",
  "source": "pragma solidity 0.5.11;\n\nimport \"./Ownable.sol\";\n\ncontract Whitelist is Ownable {\n  mapping(address => bool) whitelist;\n\n  modifier whitelisted() {\n    require(whitelist[msg.sender], \"Whitelist: caller is not in the whitelist\");\n    _;\n  }\n\n  function whitelistAddress(address user) public onlyOwner {\n    whitelist[user] = true;\n  }\n\n  function unWhitelistAddress(address user) public onlyOwner {\n    whitelist[user] = false;\n  }\n}\n",
  "sourcePath": "/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Whitelist.sol",
  "ast": {
    "absolutePath": "/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        4687
      ]
    },
    "id": 4688,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4639,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 4640,
        "nodeType": "ImportDirective",
        "scope": 4688,
        "sourceUnit": 1875,
        "src": "25:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4641,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1874,
              "src": "72:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1874",
                "typeString": "contract Ownable"
              }
            },
            "id": 4642,
            "nodeType": "InheritanceSpecifier",
            "src": "72:7:8"
          }
        ],
        "contractDependencies": [
          22,
          1874
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4687,
        "linearizedBaseContracts": [
          4687,
          1874,
          22
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4646,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 4687,
            "src": "84:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4645,
              "keyType": {
                "id": 4643,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "92:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "84:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 4644,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "103:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4657,
              "nodeType": "Block",
              "src": "146:93:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4649,
                          "name": "whitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4646,
                          "src": "160:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4652,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4650,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5669,
                            "src": "170:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "170:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "160:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c6973743a2063616c6c6572206973206e6f7420696e207468652077686974656c697374",
                        "id": 4653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "183:43:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29972a9d8fcacffaad1bb81e3a2c3feb5e4bb18f7a9477ae7fd6966e01754768",
                          "typeString": "literal_string \"Whitelist: caller is not in the whitelist\""
                        },
                        "value": "Whitelist: caller is not in the whitelist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29972a9d8fcacffaad1bb81e3a2c3feb5e4bb18f7a9477ae7fd6966e01754768",
                          "typeString": "literal_string \"Whitelist: caller is not in the whitelist\""
                        }
                      ],
                      "id": 4648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5672,
                        5673
                      ],
                      "referencedDeclaration": 5673,
                      "src": "152:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "152:75:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4655,
                  "nodeType": "ExpressionStatement",
                  "src": "152:75:8"
                },
                {
                  "id": 4656,
                  "nodeType": "PlaceholderStatement",
                  "src": "233:1:8"
                }
              ]
            },
            "documentation": null,
            "id": 4658,
            "name": "whitelisted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:2:8"
            },
            "src": "123:116:8",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4671,
              "nodeType": "Block",
              "src": "300:33:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4665,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4646,
                        "src": "306:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4667,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4666,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4660,
                        "src": "316:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "306:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "324:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "306:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4670,
                  "nodeType": "ExpressionStatement",
                  "src": "306:22:8"
                }
              ]
            },
            "documentation": null,
            "id": 4672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4663,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4662,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1828,
                  "src": "290:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "290:9:8"
              }
            ],
            "name": "whitelistAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4660,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 4672,
                  "src": "269:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "268:14:8"
            },
            "returnParameters": {
              "id": 4664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:0:8"
            },
            "scope": 4687,
            "src": "243:90:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4685,
              "nodeType": "Block",
              "src": "396:34:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4679,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4646,
                        "src": "402:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4681,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4680,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4674,
                        "src": "412:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "402:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 4682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "420:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "402:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4684,
                  "nodeType": "ExpressionStatement",
                  "src": "402:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 4686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4677,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4676,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1828,
                  "src": "386:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "386:9:8"
              }
            ],
            "name": "unWhitelistAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4674,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 4686,
                  "src": "365:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "364:14:8"
            },
            "returnParameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:8"
            },
            "scope": 4687,
            "src": "337:93:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4688,
        "src": "50:382:8"
      }
    ],
    "src": "0:433:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        4687
      ]
    },
    "id": 4688,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4639,
        "literals": [
          "solidity",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/gokulalex/Apps/eth_apps/VerityNet/aave-circom-zkrollups/iden3-zkrollups/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 4640,
        "nodeType": "ImportDirective",
        "scope": 4688,
        "sourceUnit": 1875,
        "src": "25:23:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4641,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1874,
              "src": "72:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1874",
                "typeString": "contract Ownable"
              }
            },
            "id": 4642,
            "nodeType": "InheritanceSpecifier",
            "src": "72:7:8"
          }
        ],
        "contractDependencies": [
          22,
          1874
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4687,
        "linearizedBaseContracts": [
          4687,
          1874,
          22
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4646,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 4687,
            "src": "84:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 4645,
              "keyType": {
                "id": 4643,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "92:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "84:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 4644,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "103:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4657,
              "nodeType": "Block",
              "src": "146:93:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4649,
                          "name": "whitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4646,
                          "src": "160:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 4652,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4650,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5669,
                            "src": "170:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "170:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "160:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "57686974656c6973743a2063616c6c6572206973206e6f7420696e207468652077686974656c697374",
                        "id": 4653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "183:43:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29972a9d8fcacffaad1bb81e3a2c3feb5e4bb18f7a9477ae7fd6966e01754768",
                          "typeString": "literal_string \"Whitelist: caller is not in the whitelist\""
                        },
                        "value": "Whitelist: caller is not in the whitelist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29972a9d8fcacffaad1bb81e3a2c3feb5e4bb18f7a9477ae7fd6966e01754768",
                          "typeString": "literal_string \"Whitelist: caller is not in the whitelist\""
                        }
                      ],
                      "id": 4648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5672,
                        5673
                      ],
                      "referencedDeclaration": 5673,
                      "src": "152:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "152:75:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4655,
                  "nodeType": "ExpressionStatement",
                  "src": "152:75:8"
                },
                {
                  "id": 4656,
                  "nodeType": "PlaceholderStatement",
                  "src": "233:1:8"
                }
              ]
            },
            "documentation": null,
            "id": 4658,
            "name": "whitelisted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:2:8"
            },
            "src": "123:116:8",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4671,
              "nodeType": "Block",
              "src": "300:33:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4665,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4646,
                        "src": "306:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4667,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4666,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4660,
                        "src": "316:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "306:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "324:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "306:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4670,
                  "nodeType": "ExpressionStatement",
                  "src": "306:22:8"
                }
              ]
            },
            "documentation": null,
            "id": 4672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4663,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4662,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1828,
                  "src": "290:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "290:9:8"
              }
            ],
            "name": "whitelistAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4660,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 4672,
                  "src": "269:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "268:14:8"
            },
            "returnParameters": {
              "id": 4664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "300:0:8"
            },
            "scope": 4687,
            "src": "243:90:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4685,
              "nodeType": "Block",
              "src": "396:34:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4679,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4646,
                        "src": "402:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4681,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4680,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4674,
                        "src": "412:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "402:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 4682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "420:5:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "402:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4684,
                  "nodeType": "ExpressionStatement",
                  "src": "402:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 4686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4677,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4676,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1828,
                  "src": "386:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "386:9:8"
              }
            ],
            "name": "unWhitelistAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4674,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 4686,
                  "src": "365:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "364:14:8"
            },
            "returnParameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:8"
            },
            "scope": 4687,
            "src": "337:93:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4688,
        "src": "50:382:8"
      }
    ],
    "src": "0:433:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2020-10-20T12:59:39.922Z",
  "devdoc": {
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}