/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface DoubleTransferHelperInterface extends Interface {
  functions: {
    AAVE: TypedFunctionDescription<{ encode([]: []): string }>;

    doubleSend: TypedFunctionDescription<{
      encode([to, amount1, amount2]: [
        string,
        BigNumberish,
        BigNumberish
      ]): string;
    }>;
  };

  events: {};
}

export class DoubleTransferHelper extends Contract {
  connect(signerOrProvider: Signer | Provider | string): DoubleTransferHelper;
  attach(addressOrName: string): DoubleTransferHelper;
  deployed(): Promise<DoubleTransferHelper>;

  on(event: EventFilter | string, listener: Listener): DoubleTransferHelper;
  once(event: EventFilter | string, listener: Listener): DoubleTransferHelper;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): DoubleTransferHelper;
  removeAllListeners(eventName: EventFilter | string): DoubleTransferHelper;
  removeListener(eventName: any, listener: Listener): DoubleTransferHelper;

  interface: DoubleTransferHelperInterface;

  functions: {
    AAVE(): Promise<string>;

    doubleSend(
      to: string,
      amount1: BigNumberish,
      amount2: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  AAVE(): Promise<string>;

  doubleSend(
    to: string,
    amount1: BigNumberish,
    amount2: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    AAVE(): Promise<BigNumber>;

    doubleSend(
      to: string,
      amount1: BigNumberish,
      amount2: BigNumberish
    ): Promise<BigNumber>;
  };
}
