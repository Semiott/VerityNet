/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface LendToAaveMigratorInterface extends Interface {
  functions: {
    AAVE: TypedFunctionDescription<{ encode([]: []): string }>;

    LEND: TypedFunctionDescription<{ encode([]: []): string }>;

    LEND_AAVE_RATIO: TypedFunctionDescription<{ encode([]: []): string }>;

    REVISION: TypedFunctionDescription<{ encode([]: []): string }>;

    _totalLendMigrated: TypedFunctionDescription<{ encode([]: []): string }>;

    initialize: TypedFunctionDescription<{ encode([]: []): string }>;

    migrateFromLEND: TypedFunctionDescription<{
      encode([amount]: [BigNumberish]): string;
    }>;

    migrationStarted: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {
    LendMigrated: TypedEventDescription<{
      encodeTopics([sender, amount]: [
        string | null,
        BigNumberish | null
      ]): string[];
    }>;
  };
}

export class LendToAaveMigrator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): LendToAaveMigrator;
  attach(addressOrName: string): LendToAaveMigrator;
  deployed(): Promise<LendToAaveMigrator>;

  on(event: EventFilter | string, listener: Listener): LendToAaveMigrator;
  once(event: EventFilter | string, listener: Listener): LendToAaveMigrator;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): LendToAaveMigrator;
  removeAllListeners(eventName: EventFilter | string): LendToAaveMigrator;
  removeListener(eventName: any, listener: Listener): LendToAaveMigrator;

  interface: LendToAaveMigratorInterface;

  functions: {
    AAVE(): Promise<string>;

    LEND(): Promise<string>;

    LEND_AAVE_RATIO(): Promise<BigNumber>;

    REVISION(): Promise<BigNumber>;

    _totalLendMigrated(): Promise<BigNumber>;

    initialize(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    migrateFromLEND(
      amount: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    migrationStarted(): Promise<boolean>;
  };

  AAVE(): Promise<string>;

  LEND(): Promise<string>;

  LEND_AAVE_RATIO(): Promise<BigNumber>;

  REVISION(): Promise<BigNumber>;

  _totalLendMigrated(): Promise<BigNumber>;

  initialize(overrides?: TransactionOverrides): Promise<ContractTransaction>;

  migrateFromLEND(
    amount: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  migrationStarted(): Promise<boolean>;

  filters: {
    LendMigrated(
      sender: string | null,
      amount: BigNumberish | null
    ): EventFilter;
  };

  estimate: {
    AAVE(): Promise<BigNumber>;

    LEND(): Promise<BigNumber>;

    LEND_AAVE_RATIO(): Promise<BigNumber>;

    REVISION(): Promise<BigNumber>;

    _totalLendMigrated(): Promise<BigNumber>;

    initialize(): Promise<BigNumber>;

    migrateFromLEND(amount: BigNumberish): Promise<BigNumber>;

    migrationStarted(): Promise<BigNumber>;
  };
}
